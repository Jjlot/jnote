#+STARTUP: showall

* Linux internal
** ps
*** 常用
ps -a  显示所有终端下执行的进程，包含其他用户的进程
ps -A  显示所有进程
ps -e  和-A功能一样
ps -H  显示树状结构，表示程序间的相互关系
ps -f  全格式显示进程

ps a   显示当前终端下执行的进程
ps c   显示进程的真实名称
ps e   列出程序所使用的环境变量
ps f   用ASCII字符显示树状结构，表达程序间的相互关系
ps x   显示所有进程，无论是否运行在终端上
ps u   显示用户相关的进程或者与用户相关的属性
ps r   只显示正在运行的进程

*** 列信息
%MEM，该进程所占用内存百分比；

VSZ，进程所占用的虚拟内存大小；

RSS，进程所占用的实际内存大小；

START，进程启动时间；

*** Show threads
ps -L [pid]

*** Show processes in a hierarchy
ps aux --forest

*** 根据用户过滤进程
ps -u zhang

*** sort
--sort=[+|-] key

ps aux --sort=-time

ps aux --sort=-vsz | head -n 5

+表示升序排序，而-表示降序排序

*** 根据进程名和PID来过滤
ps -C bash

*** 根据进程查看线程
ps -L 2011

*** 树形显示进程
ps af

另外可试试pstree

*** links
**** Linux-ps命令学习
https://www.jianshu.com/p/943b90150c10

** kill
kill -9 `ps aux | grep neutron-server`

** ssh
*** SSH免密 (client operations)
**** 客户端生成公私钥(~/.ssh)
ssh-keygen

**** 上传公钥到服务器(~/.ssh/authorized_keys)
ssh-copy-id -i ~/.ssh/id_rsa.pub root@192.168.235.22

*** SSH tunnel via multiple hops
**** Direct command
ssh -J jumpuser1@jumphost1,jumpuser2@jumphost2,...,jumpuserN@jumphostN user@host

**** Via configuration
Add this to your ~/.ssh/config (see man 5 ssh_config for details):

Host host2
  ProxyCommand ssh host1 -W %h:%p

Then ssh host2 will automatically tunnel through host1

** sed
*** Command sample
sed -i 's/shanghai/nanjing/g' input.json

sed '/shanghai2/a2' input.json

*** Explain
-i：直接对内容进行修改，不加-i时默认只是预览，不会对文件做实际修改

s: 替换  替换掉匹配的内容

a: 追加  向匹配行后面插入内容

d: 删除  删除匹配的内容

*** Comment
sed -i '/2001/s/^/#/g' file

*** Uncomment
sed -i '/2001/s/^#//g' file

** systemctl
systemctl is-active neutron-server

systemctl --system daemon-reload

ntsysv

/etc/systemd/system

//usr/lib/systemd/system/

** sysctl
sysctl net.ipv4.ip_forward

sysctl -w net.ipv4.ip_forward=1

# 加载系统参数，默认使用 /etc/sysctl.conf
sysctl -p

# Default enable ip forwarding when adding to /etc/sysctl.conf
net.ipv4.ip_forward = 1

** CentOS yum repo
*** For x86
curl https://mirrors.huaweicloud.com/repository/conf/CentOS-7-anon.repo > /etc/yum.repos.d/CentOS-Base.repo

yum clean all && yum makecache

*** For Aarch64
curl https://mirrors.huaweicloud.com/repository/conf/CentOS-AltArch-7.repo > /etc/yum.repos.d/CentOS-Base.repo

yum clean all && yum makecache

** Ip
*** Address
ip addr add 100.1.1.1/24 dev eth0

ip addr del 100.1.1.1/24 dev eth0

ip addr add 2001::10/64 dev eth0

ip addr del 2001::10/64 dev eth0

ifconfig eth0 inet6 del fe80::c160:cd99:cf48:c7fd/64

*** Mac modify
ifconfig eth0 hw ether 00:11:11:11:11:11

*** Namespace
ip netns add ns10
  
ip link set eth10 netns ns10

ip netns exec ns10 bash

*** Veth
ip link add veth0 type veth peer name veth1

*** Vlan
ip link add link veth0 name veth0.160 type vlan id 160

** Iptables
iptables -I INPUT -p tcp -m tcp -j ACCEPT

** brctl  
brctl addbr br0

brctl addif br0 veth0

brctl show

brctl showmacs br0

** nmtui
Text User Interface for controlling NetworkManager

** dhcp
*** Forget ipv6
/var/lib/dhclient/dhclient6.leases

** date
*** time duration
#+begin_src shell
date +"%T.%N"
ping 127.0.0.1 -c 4
date +"%T.%N"
#+end_src

*** time zone
timedatectl set-timezone Asia/Shanghai

** cat
#+begin_src shell
  cat >/tmp/intf.xml <<EOF
  hi
  EOF
#+end_src

** awk
awk 是很实用的文本处理命令，print 到后带的是你要获取第几列，sed -n 是指定第几行。
ls -l | awk '{print $5}' | sed -n '2p'

** systemd-cat
systemd-cat  Connect a pipeline or program's output with the journal
#+begin_src shell
  printf "hi" | systemd-cat
#+end_src

** eth0
#+begin_src shell
cat > /etc/sysconfig/network-scripts/ifcfg-eth0 << EOF
TYPE=Ethernet
DEFROUTE=yes
PEERDNS=yes
PEERROUTES=yes
NAME=eth0
DEVICE=eth0
ONBOOT=yes
IPADDR=192.168.0.66
NETMASK=255.255.255.0
GATEWAY=192.168.0.1
EOF
#+end_src

** iptables
*** counter
iptables --list-rules -v

iptables-save -c

iptables-save -c | grep -v '\[0:0\]'

iptables -Z

less /etc/sysconfig/iptables

iptables -nL -t nat

*** Samples
-A INPUT -p tcp -m state --state NEW -m tcp --dport 3306 -j ACCEPT

* Other package
** gdb
*** Set a memory break point
(gdb) watch 0x11223344

*** Print var type
(gdb) whatis he
type = struct child

*** Print struct details
(gdb) ptype he
type = struct child {
char name[10];
enum {boy, girl} gender;
}

** gcc
*** Switch gcc version
yum install centos-release-scl 

yum install devtoolset-7-gcc 

scl enable devtoolset-7 bash

gcc -v

** tcpdump
*** tcpdump -xx -tt 直接把报文用十六进制打印出来

** Git
*** Create a new remote branch
git push origin 6.0.2:6.0.2-jing

*** Delete a remote branch
git push origin --delete 6.0.2-jing

** Docker
*** Image
docker search centos

docker pull centos:7.9.2009

docker images

docker rmi 218b8335b7b0
   
*** Container
docker run -itd centos bash
   
docker run -itd --name="centos7" --privileged=true centos:7 /usr/sbin/init
   
docker exec -it a0 bash
   
docker ps -a
  
docker stop 47d478b8dcbf
  
docker rm 47d478b8dcbf

pipework br-int -l pf0 dpf0 100.1.1.10/24 00:11:11:11:11:11

*** Proxy between Docker daemon and the Internet
#+begin_src shell
mkdir -p /etc/systemd/system/docker.service.d

cat > /etc/systemd/system/docker.service.d/http-proxy.conf << EOF
[Service]
Environment="HTTP_PROXY=http://your.proxy:8080"
Environment="HTTPS_PROXY=http://your.proxy:8080"
Environment="NO_PROXY=127.0.0.1,localhost
EOF

systemctl daemon-reload

systemctl restart docker

systemctl show --property=Environment docker
#+end_src

*** Enable ipv6
Edit /etc/docker/daemon.json, set the ipv6 key to true and the fixed-cidr-v6 key to your IPv6 subnet. In this example we are setting it to 2001:db8:1::/64.

#+begin_src json
  {
      "ipv6": true,
      "fixed-cidr-v6": "2001:db8:1::/64"
  }
#+end_src

Save the file.

Reload the Docker configuration file.

#+begin_src shell
  systemctl reload docker
#+end_src

** Quagga
yum install quagga

systemctl start zebra

vtysh

telnet 127.0.0.1 2601

** pipework   
git clone https://github.com/jpetazzo/pipework

cp pipework/pipework /bin

docker run -itd --name con1 ubuntu:14.04 /bin/bash

pipework br-int dpf0 100.1.1.10/24

pipework mac:<hostinterface_macaddress> [-i containerinterface] [-l localinterfacename]
[-a addressfamily] <guest> <ipaddr>/<subnet>[@default_gateway] [macaddr][@vlan]
  
pipework br-int -l pf0 dpf0 100.1.1.10/24 00:11:11:11:11:11

** Keepalived
keepalived -f /home/hyper/ns10.conf \
           -p /var/run/keepalivedns10.pid \
           -r /var/run/keepalivedns10.pid \
           -c /var/run/keepalivedns10.pid \
           -s ns10

宿主内要装好keepalived, modprobe ip_vs  

** Mininet
*** GUI design
./mininet/examples/miniedit.py

** Qemu
qemu-img info vm.qcow2

qemu-img resize vm.qcow2 +10G

*** create fs
"C:/Program Files/qemu/qemu-img" create -f qcow2 centos-aarch64.qcow2 128G

*** start from img
"C:/Program Files/qemu/qemu-img" info CentOS-Userland-7-aarch64-generic-Minimal-2009-sda.raw

"C:/Program Files/qemu/qemu-img" resize CentOS-Userland-7-aarch64-generic-Minimal-2009-sda.raw 128G

#+BEGIN_SRC shell
  "C:/Program Files/qemu/qemu-system-aarch64" \
      -cpu cortex-a72 -smp 4 -M virt -m 8192 \
      -hda CentOS-Userland-7-aarch64-generic-Minimal-2009-sda.raw \
      -drive if=pflash,format=raw,file=QEMU_EFI.img \
      -netdev user,id=n1 -device virtio-net-pci,netdev=n1 \
      -vga std \
      -serial telnet::5555,server,nowait
#+END_SRC

#+BEGIN_SRC shell
  "C:/Program Files/qemu/qemu-system-aarch64" \
      -cpu cortex-a72 -smp 4 -M virt -m 8192 \
      -drive file=CentOS-Userland-7-aarch64-generic-Minimal-2009-sda.raw,format=raw,index=0,media=disk \
      -drive if=pflash,format=raw,file=QEMU_EFI.img \
      -netdev user,id=n1 -device virtio-net-pci,netdev=n1 \
      -vga std \
      -serial telnet::5555,server,nowait
#+END_SRC

*** install from iso
#+BEGIN_SRC shell
  "C:/Program Files/qemu/qemu-system-aarch64" \
      -cpu cortex-a72 -smp 4 -M virt -m 8192 \
      -hda centos-aarch64.qcow2 \
      -drive if=pflash,format=raw,file=QEMU_EFI.img \
      -drive if=virtio,format=raw,file=CentOS-7-aarch64-Minimal-2009.iso \
      -vga std \
      -serial telnet::5555,server,nowait
#+END_SRC

** virsh
virsh domiflist vsr11_north

/var/lib/libvirt/images/jing

*** aarch64 vm
#+BEGIN_SRC shell
  virt-install \
      --virt-type=kvm \
      --name centos-aarch64 \
      --ram 8192 \
      --vcpus=4 \
      --os-variant=centos7.0 \
      --cdrom=/home/jing/CentOS-7-aarch64-Minimal-2009.iso \
      --network=bridge=br135,model=virtio \
      --graphics vnc \
      --disk path=/home/jing/centos-aarch64.qcow2,size=80,bus=virtio,format=qcow2
#+END_SRC

** Guestfish
*** how-to-set-root-password-of-centos-7
yum install libguestfs-tools

openssl passwd -1 password

guestfish --rw -a /var/lib/libvirt/images/CentOS-7-x86_64-GenericCloud-1907.qcow2

https://www.linuxcnf.com/2019/11/how-to-set-root-password-of-centos-7.html

https://www.cnblogs.com/BuildingHome/p/4834859.html

** mycli
yum install python3-pip

pip3 install --upgrade pip

pip3 install mycli

** Deploy vsftpd on CentOS (Need to rewrite the sed commands with sed comment below)
yum install ftp vsftpd -y

cp /etc/vsftpd/vsftpd.conf /etc/vsftpd/vsftpd.conf.default

useradd ftp_user

passwd ftp_user

mkdir /home/ftp

chown -R ftp_user /home/ftp

sed -i 's/anonymous_enable=YES/anonymous_enable=NO/' /etc/vsftpd/vsftpd.conf

sed -i '$ a chroot_local_user=YES' /etc/vsftpd/vsftpd.conf

sed -i '$ a allow_writeable_chroot=YES' /etc/vsftpd/vsftpd.conf

sed -i '$ a local_root=/home/ftp' /etc/vsftpd/vsftpd.conf

systemctl enable vsftpd

systemctl start vsftpd

** lsof
*** Unix socket
lsof -U

*** List all the network connections
lsof -i

*** 显示IP地址非url
lsof -n

*** 显示port非name
lsof -P

*** Find IPv4 /IPv6 Socket file
lsof -i@100.1.1.1

*** List all Process or Commands that belongs to a Process I
lsof -p 2842

*** List all open files under a specific directory
lsof +D /var/log/

*** Combine more list options using OR/AND
**** -p or -U
lsof -p 4667 -U

**** -p and -U
lsof -p 4667 -U a

*** Full command name
lsof +c0

*** 依据进程名查看
lsof -c mysql

** curl
*** json format
curl http://192.168.248.1:80/gui/ns/id9 | python -m json.tool

** disk scale
[root@localhost ~]# fdisk /dev/mmcblk0
Welcome to fdisk (util-linux 2.23.2).

Changes will remain in memory only, until you decide to write them.
Be careful before using the write command.


Command (m for help): p

Disk /dev/mmcblk0: 63.9 GB, 63864569856 bytes, 124735488 sectors
Units = sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disk label type: dos
Disk identifier: 0x00024e4f

Device Boot      Start         End      Blocks   Id  System
/dev/mmcblk0p1   *        8192      593919      292864    c  W95 FAT32 (LBA)
/dev/mmcblk0p2          593920     1593343      499712   82  Linux swap / Solaris
/dev/mmcblk0p3         1593344     5890047     2148352   83  Linux

Command (m for help): d
Partition number (1-3, default 3):
Partition 3 is deleted

Command (m for help): n
Partition type:
p   primary (2 primary, 0 extended, 2 free)
e   extended
Select (default p): p
Partition number (3,4, default 3):
First sector (2048-124735487, default 2048): 1593344
Last sector, +sectors or +size{K,M,G} (1593344-124735487, default 124735487):
Using default value 124735487
Partition 3 of type Linux and of size 58.7 GiB is set

Command (m for help): w
The partition table has been altered!

Calling ioctl() to re-read partition table.

WARNING: Re-reading the partition table failed with error 16: Device or resource busy.
The kernel still uses the old table. The new table will be used at
the next reboot or after you run partprobe(8) or kpartx(8)
Syncing disks.

resize2fs /dev/mmcblk0p3

** start vm (nested vm)
yum -y install libguestfs-tools libguestfs-xfs virt-top

virt-builder centos-7.2 --format qcow2 -o centos72.qcow2 --root-password password

#+BEGIN_SRC shell
  virt-install \
      --name centos-72 \
      --ram 2048 \
      --disk path=/home/centos-7.8.qcow2 \
      --vcpus 2 \
      --os-type linux \
      --os-variant rhel7.2 \
      --network bridge=br0 \
      --graphics none \
      --serial pty \
      --console pty \
      --boot hd \
      --import
#+END_SRC

#+BEGIN_SRC shell
  virt-install \ 
  --name vvm \ 
  --memory 2048 \ 
  --vcpus 2 \ 
  --disk size=8 \ 
  --cdrom /home/CentOS-7-aarch64-Minimal-2009.iso \
          --os-variant rhel7
#+END_SRC

#+BEGIN_SRC shell
  virt-install --name=vvm-raw \
               --disk path=/home/CentOS-Userland-7-aarch64-generic-Minimal-2009-sda.raw,sparse=true,cache=none,bus=virtio,format=raw \
               --vcpus=2 \
               --ram=2048 \
               --network bridge=br0,model=virtio \
               --boot hd \
               --os-type=linux
#+END_SRC

virsh undefine --nvram vvm

** CWP (CentOS web panel)
*** install
cd /usr/local/src

wget http://centos-webpanel.com/cwp-el7-latest

sh cwp-el7-latest

ACCEPT: domain:2030

REFS: https://www.tecmint.com/install-centos-web-panel-on-centos-7/

*** phpmyadmin AllowNoPassword
/usr/local/cwpsrv/var/services/pma/config.inc.php

$cfg['Servers'][$i]['AllowNoPassword'] = true;

** openssl rsa
*** operations
openssl genrsa -out key.pem 1024

openssl rsa -in key.pem -pubout -out pubkey.pem

openssl rsautl -encrypt -in input.json -inkey pubkey.pem -pubin -out encrypted.file

cat encrypted.file | openssl enc -A -base64

openssl rsautl -decrypt -in encrypted.file -inkey key.pem -out decrypted.file


* todo
** netstat

** objdump

** sort

** ps
STAT column

%MEM, VSZ and RSS
